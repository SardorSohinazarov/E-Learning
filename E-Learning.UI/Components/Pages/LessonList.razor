@page "/lessons"
@attribute [StreamRendering]

<PageTitle>Lessons</PageTitle>

<div class="container">

    <p class="text-center">Lessonlar listi</p>

    @if (lessonList == null)
    {
        <p><em>Loading...</em></p>
    }
    else
    {
        <div class="container">
            <ul class="list-group list-group-flush">
                @foreach (var lesson in lessonList)
                {
                    var id = lesson.Id;
                    <a href="/lessons/@id" class="list-group-item list-group-item-action border-bottom">
                        <li class="list-item">
                            <div class="li-text">
                                <h5>
                                    <span class="px-3 py-2 bg-black rounded-1 text-white">
                                        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="currentColor" class="bi bi-check-all" viewBox="0 0 16 16">
                                            <path d="M8.97 4.97a.75.75 0 0 1 1.07 1.05l-3.99 4.99a.75.75 0 0 1-1.08.02L2.324 8.384a.75.75 0 1 1 1.06-1.06l2.094 2.093L8.95 4.992a.252.252 0 0 1 .02-.022zm-.92 5.14.92.92a.75.75 0 0 0 1.079-.02l3.992-4.99a.75.75 0 1 0-1.091-1.028L9.477 9.417l-.485-.486-.943 1.179z" />
                                        </svg>
                                    </span>
                                    @lesson.Name
                                </h5>
                            </div>
                        </li>
                    </a>
                }
            </ul>
        </div>
    }
</div>

<style>
    .posts-list {
        justify-content: space-evenly;
    }

    a {
        text-decoration: none;
    }

    .list-group {
        list-style-type: none;
    }

    .list-group-item {
        position: relative;
        border-style: solid;
        transition: box-shadow 0.3s;
    }

    .list-group-item:hover {
        box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.3);
    }

    .list-item {
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .li-text {
        float: left;
        padding: 10px 0;
    }

    .item {
        position: relative;
        width: 30px;
        height: 24px;
    }

    .list-group-item:hover {

        visibility: visible;
    }
</style>

@code {
    private ELearning.UI.Model.LessonDTO[]? lessonList;

    protected override async Task OnInitializedAsync()
    {
        lessonList = Enumerable.Range(1, 5).Select(index => new ELearning.UI.Model.LessonDTO()
        {
            Id = new Random().Next(1,1000).ToString(),
            Name = "Darni qattig'i"
        }).ToArray();
    }
}
