@page "/lessons"
@using ELearning.UI.Model
@attribute [StreamRendering]

<PageTitle>Lessons</PageTitle>

<h1 class="text-center">Darslar ro'yhati</h1>

<div class="container">


    @if (lessonList == null)
    {
        <p><em>Loading...</em></p>
    }
    else
    {
        <div class="">
            <div class="container col-md-6 col-12">
                <ul class="list-group list-group-flush">
                    @foreach (var lesson in lessonList)
                    {
                        var id = lesson.Id;
                        <a href="/lessons/@id" class="list-group-item list-group-item-action border-bottom">
                            <li class="list-item">
                                <div class="li-text">
                                    <h5>
                                        <span class="px-3 py-2 bg-black rounded-1 text-white">
                                            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="currentColor" class="bi bi-check-all" viewBox="0 0 16 16">
                                                <path d="M8.97 4.97a.75.75 0 0 1 1.07 1.05l-3.99 4.99a.75.75 0 0 1-1.08.02L2.324 8.384a.75.75 0 1 1 1.06-1.06l2.094 2.093L8.95 4.992a.252.252 0 0 1 .02-.022zm-.92 5.14.92.92a.75.75 0 0 0 1.079-.02l3.992-4.99a.75.75 0 1 0-1.091-1.028L9.477 9.417l-.485-.486-.943 1.179z" />
                                            </svg>
                                        </span>
                                        @lesson.Name
                                    </h5>
                                </div>
                            </li>
                        </a>
                    }
                </ul>
            </div>
        </div>
    }
</div>

<style>
    .posts-list {
        justify-content: space-evenly;
    }

    a {
        text-decoration: none;
    }

    .list-group {
        list-style-type: none;
    }

    .list-group-item {
        position: relative;
        border-style: solid;
        transition: box-shadow 0.3s;
    }

    .list-group-item:hover {
        box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.3);
    }

    .list-item {
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .li-text {
        float: left;
        padding: 10px 0;
    }

    .item {
        position: relative;
        width: 30px;
        height: 24px;
    }

    .list-group-item:hover {

        visibility: visible;
    }
</style>

@code {
    private LessonDTO[]? lessonList;

    protected override async Task OnInitializedAsync()
    {
        lessonList = new LessonDTO[]{
            new LessonDTO()
            {
                Id = "1",
                Name = ".Net ga kirish"
            }, 
            new LessonDTO()
            {
                Id = "2",
                Name = "C# da o'zgaruvchilar"
            },
            new LessonDTO()
            {
                Id = "3",
                Name = "C# operatorlar"
            }, 
            new LessonDTO()
            {
                Id = "4",
                Name = "If Shart operator"
            }, 
            new LessonDTO()
            {
                Id = "5",
                Name = "Switch Tanlash operatori"
            },
            new LessonDTO()
            {
                Id = "6",
                Name = "For takrorlash sikli"
            }, 
            new LessonDTO()
            {
                Id = "7",
                Name = "While(),Do While() takrorlash sikli"
            }, 
            new LessonDTO()
            {
                Id = "8",
                Name = "C# String funksiyalari"
            },
            new LessonDTO()
            {
                Id = "9",
                Name = "C# Array"
            }, 
            new LessonDTO()
            {
                Id = "10",
                Name = "C# Funksiya"
            }, 
        };
    }
}
